{"version":3,"file":"static/js/191.fd5db99e.chunk.js","mappings":"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","sources":["components/Components/utils/API.jsx","components/Components/MovieItem/MovieItem.module.jsx","components/Components/MovieItem/MovieItem.jsx","components/Pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nconst AUTH_KEY = 'e88eb452a05a2e0e5aee8e4233a13d99';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['Authorization'] = AUTH_KEY;\n\nexport const fetchMovieByPopular = async () => {\n  const options = {\n    params: {\n      api_key: AUTH_KEY,\n      page: 1,\n    },\n  };\n\n  const { data } = await axios(`/movie/popular`, options);\n  return data;\n};\nexport const fetchMovieById = async id => {\n  const options = {\n    params: {\n      api_key: AUTH_KEY,\n    },\n  };\n\n  const { data } = await axios(`/movie/${id}`, options);\n  return data;\n};\nexport const fetchMovieByCredits = async id => {\n  const options = {\n    params: {\n      api_key: AUTH_KEY,\n    },\n  };\n\n  const { data } = await axios(`/movie/${id}/credits`, options);\n  return data;\n};\nexport const fetchMovieByReviews = async id => {\n  const options = {\n    params: {\n      api_key: AUTH_KEY,\n    },\n  };\n\n  const { data } = await axios(`/movie/${id}/reviews`, options);\n  return data;\n};\nexport const fetchMovieByName = async name => {\n  const options = {\n    params: {\n      api_key: AUTH_KEY,\n    },\n  };\n\n  const { data } = await axios(`/search/movie?query=${name}`, options);\n  return data;\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 20px;\n  padding-top: 0;\n`;\nexport const MovieInfo = styled.div`\n  display: flex;\n  gap: 20px;\n`;\nexport const AdditionalInfo = styled.div`\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n`;\nexport const Title = styled.h3`\n  margin: 0;\n  padding: 0;\n  display: flex;\n  width: 100%;\n`;\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding: 0;\n  padding-left: 40px;\n`;\nexport const Item = styled.li``;\nexport const Poster = styled.img`\n  width: 400px;\n  height: 500px;\n`;\nexport const Info = styled.div``;\nexport const FilmTitle = styled.h2``;\nexport const FilmScore = styled.p``;\nexport const FilmOverview = styled.h3``;\nexport const FilmOverviewText = styled.div``;\nexport const FilmGenres = styled.h3``;\nexport const FilmGenresList = styled.div``;\n\nexport const ReturnBackLink = styled(Link)`\n  margin-left: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: end;\n  padding: 10px 0;\n  width: 120px;\n  text-decoration: none;\n  &:hover {\n    text-decoration: underline;\n  }\n  &::before {\n    content: '\\u21E0';\n    margin-right: 10px;\n  }\n`;\n","import { Link, Outlet } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Container,\n  MovieInfo,\n  AdditionalInfo,\n  Title,\n  List,\n  Item,\n  Poster,\n  Info,\n  FilmTitle,\n  FilmScore,\n  FilmOverview,\n  FilmOverviewText,\n  FilmGenres,\n  FilmGenresList,\n} from './MovieItem.module';\nimport Loader from '../Loader/Loader';\n\nexport default function MovieItem({ movie }) {\n  const {\n    backdrop_path,\n    original_title,\n    vote_average,\n    overview,\n    genres,\n    release_date,\n  } = movie;\n\n  return (\n    <>\n      {!Object.keys(movie).length ? (\n        <Loader />\n      ) : (\n        <Container>\n          <MovieInfo>\n            <Poster\n              src={`https://www.themoviedb.org/t/p/w600_and_h900_bestv2/${backdrop_path}`}\n            ></Poster>\n            <Info>\n              <FilmTitle>\n                {original_title} ({release_date})\n              </FilmTitle>\n              <FilmScore>User Score: {vote_average}%</FilmScore>\n              <FilmOverview>Overview</FilmOverview>\n              <FilmOverviewText>{overview}</FilmOverviewText>\n              <FilmGenres>Genres</FilmGenres>\n              <FilmGenresList>\n                {genres.map(item => {\n                  return <span key={item.id}>{item.name} | </span>;\n                })}\n              </FilmGenresList>\n            </Info>\n          </MovieInfo>\n          <AdditionalInfo>\n            <Title>Additional information</Title>\n            <List>\n              <Item>\n                <Link to=\"Cast\">Cast</Link>\n              </Item>\n              <Item>\n                <Link to=\"Reviews\">Reviews</Link>\n              </Item>\n            </List>\n            <Outlet></Outlet>\n          </AdditionalInfo>\n        </Container>\n      )}\n    </>\n  );\n}\nMovieItem.propTypes = {\n  movie: PropTypes.object.isRequired,\n};\n","import { useEffect, useState, useRef } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { fetchMovieById } from 'components/Components/utils/API';\nimport MovieItem from 'components/Components/MovieItem/MovieItem';\nimport { ReturnBackLink } from '../Components/MovieItem/MovieItem.module';\nimport Loader from 'components/Components/Loader/Loader';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const [isLoading, setLoading] = useState(false);\n  const location = useLocation();\n  const { current } = useRef(location.state?.from ?? '/');\n  //console.log(location.state.pathname + location.state.search);\n\n  useEffect(() => {\n    const getMovieById = async id => {\n      try {\n        setLoading(true);\n        const result = await fetchMovieById(id);\n        setMovie(result);\n        setLoading(false);\n      } catch {\n        console.log('error');\n      }\n    };\n    getMovieById(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          <ReturnBackLink to={current}>Return back</ReturnBackLink>\n          <MovieItem movie={movie} isLoading={isLoading}></MovieItem>\n        </>\n      )}\n    </>\n  );\n}\n"],"names":["AUTH_KEY","axios","fetchMovieByPopular","options","params","api_key","page","data","fetchMovieById","id","fetchMovieByCredits","fetchMovieByReviews","fetchMovieByName","name","Container","styled","MovieInfo","AdditionalInfo","Title","List","Item","Poster","Info","FilmTitle","FilmScore","FilmOverview","FilmOverviewText","FilmGenres","FilmGenresList","ReturnBackLink","Link","MovieItem","movie","backdrop_path","original_title","vote_average","overview","genres","release_date","Object","keys","length","src","map","item","to","Loader","MovieDetails","movieId","useParams","useState","setMovie","isLoading","setLoading","location","useLocation","current","useRef","state","from","useEffect","getMovieById","result","console","log"],"sourceRoot":""}